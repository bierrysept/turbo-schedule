<?php

namespace Bierrysept\TurboSchedule\Tests\Adapters\Console;

use Bierrysept\TurboSchedule\Adapters\Console\WeekStatisticConsolePresenter;
use Bierrysept\TurboSchedule\Tests\Adapters\Console\Spies\PrinterSpy;
use Exception;
use PHPUnit\Framework\TestCase;

class WeekStatisticConsolePresenterTest extends TestCase
{
    private WeekStatisticConsolePresenter $presenter;

    public function setUp(): void
    {
        $this->presenter = new WeekStatisticConsolePresenter();
    }

    /**
     * @throws Exception from DateTime
     */
    public function testDefaultOutput (): void
    {
        $input = [
            '19.05.2025' => [
                'Procrastination' => '24:00:00',
            ],
            '20.05.2025' => [
                'Procrastination' => '24:00:00',
            ],
            '21.05.2025' => [
                'Procrastination' => '24:00:00',
            ],
            '22.05.2025' => [
                'Procrastination' => '24:00:00',
            ],
            '23.05.2025' => [
                'Procrastination' => '24:00:00',
            ],
            '24.05.2025' => [
                'Procrastination' => '24:00:00',
            ],
            '25.05.2025' => [
                'Procrastination' => '24:00:00',
            ],
        ];
        $output = <<<EOL
+---------------+----------+----------+----------+----------+----------+----------+----------+
|               |19.05.2025|20.05.2025|21.05.2025|22.05.2025|23.05.2025|24.05.2025|25.05.2025|
+---------------+----------+----------+----------+----------+----------+----------+----------+
|Procrastination| 24:00:00 | 24:00:00 | 24:00:00 | 24:00:00 | 24:00:00 | 24:00:00 | 24:00:00 |
+---------------+----------+----------+----------+----------+----------+----------+----------+
EOL;
        $this->assertEquals($output, $this->presenter->getBaseTable($input));
    }

    /**
     * @throws Exception from DateTime
     */
    public function testDefaultOutputWithOneTrack (): void
    {
        $input = [
            '19.05.2025' => [
                'Sleep & rest' => '09:00:00',
                'Procrastination' => '15:00:00',
            ],
            '20.05.2025' => [
                'Procrastination' => '24:00:00',
            ],
            '21.05.2025' => [
                'Procrastination' => '24:00:00',
            ],
            '22.05.2025' => [
                'Procrastination' => '24:00:00',
            ],
            '23.05.2025' => [
                'Procrastination' => '24:00:00',
            ],
            '24.05.2025' => [
                'Procrastination' => '24:00:00',
            ],
            '25.05.2025' => [
                'Procrastination' => '24:00:00',
            ],
        ];
        $output = <<<EOL
+---------------+----------+----------+----------+----------+----------+----------+----------+
|               |19.05.2025|20.05.2025|21.05.2025|22.05.2025|23.05.2025|24.05.2025|25.05.2025|
+---------------+----------+----------+----------+----------+----------+----------+----------+
|Sleep & rest   | 09:00:00 | --:--:-- | --:--:-- | --:--:-- | --:--:-- | --:--:-- | --:--:-- |
+---------------+----------+----------+----------+----------+----------+----------+----------+
|Procrastination| 15:00:00 | 24:00:00 | 24:00:00 | 24:00:00 | 24:00:00 | 24:00:00 | 24:00:00 |
+---------------+----------+----------+----------+----------+----------+----------+----------+
EOL;
        $this->assertEquals($output, $this->presenter->getBaseTable($input));
    }

    /**
     * @throws Exception from DateTime
     */
    public function testWeekLessDaysOutput(): void
    {
        $input = [
            "19.04.2025" => [
                "Care" => "00:10:24",
                "Procrastination" => "23:49:36",
            ]
        ];

        $output = <<<EOL
+---------------+----------+----------+----------+----------+----------+----------+----------+
|               |__.__.____|__.__.____|__.__.____|__.__.____|__.__.____|19.04.2025|__.__.____|
+---------------+----------+----------+----------+----------+----------+----------+----------+
|Care           | --:--:-- | --:--:-- | --:--:-- | --:--:-- | --:--:-- | 00:10:24 | --:--:-- |
+---------------+----------+----------+----------+----------+----------+----------+----------+
|Procrastination| --:--:-- | --:--:-- | --:--:-- | --:--:-- | --:--:-- | 23:49:36 | --:--:-- |
+---------------+----------+----------+----------+----------+----------+----------+----------+
EOL;
        $this->assertEquals($output, $this->presenter->getBaseTable($input));
    }

    /**
     * @throws Exception from DateTime
     */
    public function testWeekLessDaysWithDayOutsiderOutput(): void
    {
        $input = [
            "19.04.2025" => [
                "Care" => "00:10:24",
                "Procrastination" => "23:49:36",
            ],
            "19.03.2025" => [
                "Sleep" => "09:10:24", // Ебать у чувака образ жизни
                "Procrastination" => "14:49:36", // Ни разу не скотский
            ]
        ];

        $output = <<<EOL
+---------------+----------+----------+----------+----------+----------+----------+----------+
|               |__.__.____|__.__.____|__.__.____|__.__.____|__.__.____|19.04.2025|__.__.____|
+---------------+----------+----------+----------+----------+----------+----------+----------+
|Care           | --:--:-- | --:--:-- | --:--:-- | --:--:-- | --:--:-- | 00:10:24 | --:--:-- |
+---------------+----------+----------+----------+----------+----------+----------+----------+
|Procrastination| --:--:-- | --:--:-- | --:--:-- | --:--:-- | --:--:-- | 23:49:36 | --:--:-- |
+---------------+----------+----------+----------+----------+----------+----------+----------+
|Sleep          | --:--:-- | --:--:-- | --:--:-- | --:--:-- | --:--:-- | --:--:-- | --:--:-- |
+---------------+----------+----------+----------+----------+----------+----------+----------+
EOL;

        $this->assertEquals($output, $this->presenter->getBaseTable($input));
    }

    /**
     * @throws Exception from DateTime
     */
    public function testOutputToPrinter(): void
    {
        $printerSpy = new PrinterSpy();
        $input = [
            "19.04.2025" => [
                "Care" => "00:10:24",
                "Procrastination" => "23:49:36",
            ],
            "19.03.2025" => [
                "Sleep" => "09:10:24", // Ебать у чувака образ жизни
                "Procrastination" => "14:49:36", // Ни разу не скотский
            ]
        ];

        $output = <<<EOL
+---------------+----------+----------+----------+----------+----------+----------+----------+
|               |__.__.____|__.__.____|__.__.____|__.__.____|__.__.____|19.04.2025|__.__.____|
+---------------+----------+----------+----------+----------+----------+----------+----------+
|Care           | --:--:-- | --:--:-- | --:--:-- | --:--:-- | --:--:-- | 00:10:24 | --:--:-- |
+---------------+----------+----------+----------+----------+----------+----------+----------+
|Procrastination| --:--:-- | --:--:-- | --:--:-- | --:--:-- | --:--:-- | 23:49:36 | --:--:-- |
+---------------+----------+----------+----------+----------+----------+----------+----------+
|Sleep          | --:--:-- | --:--:-- | --:--:-- | --:--:-- | --:--:-- | --:--:-- | --:--:-- |
+---------------+----------+----------+----------+----------+----------+----------+----------+
EOL;

        $this->presenter->setPrinter($printerSpy);
        $this->assertFalse($printerSpy->wasCalledEcho());
        $this->presenter->present($input);
        $this->assertTrue($printerSpy->wasCalledEcho());
        $this->assertEquals($output, $printerSpy->getEchos());
    }

    /**
     * @throws Exception from DateTime
     */
    public function testUnicodeOutputToPrinter(): void
    {
        $printerSpy = new PrinterSpy();
        $input = [
            "19.04.2025" => [
                "Уход" => "00:10:24",
                "Procrastination" => "23:49:36",
            ],
            "19.03.2025" => [
                "Sleep" => "09:10:24",
                "Procrastination" => "14:49:36",
            ]
        ];

        $output = <<<EOL
+---------------+----------+----------+----------+----------+----------+----------+----------+
|               |__.__.____|__.__.____|__.__.____|__.__.____|__.__.____|19.04.2025|__.__.____|
+---------------+----------+----------+----------+----------+----------+----------+----------+
|Уход           | --:--:-- | --:--:-- | --:--:-- | --:--:-- | --:--:-- | 00:10:24 | --:--:-- |
+---------------+----------+----------+----------+----------+----------+----------+----------+
|Procrastination| --:--:-- | --:--:-- | --:--:-- | --:--:-- | --:--:-- | 23:49:36 | --:--:-- |
+---------------+----------+----------+----------+----------+----------+----------+----------+
|Sleep          | --:--:-- | --:--:-- | --:--:-- | --:--:-- | --:--:-- | --:--:-- | --:--:-- |
+---------------+----------+----------+----------+----------+----------+----------+----------+
EOL;

        $this->presenter->setPrinter($printerSpy);
        $this->assertFalse($printerSpy->wasCalledEcho());
        $this->presenter->present($input);
        $this->assertTrue($printerSpy->wasCalledEcho());
        $this->assertEquals($output, $printerSpy->getEchos());
    }

    /**
     * @throws Exception from DateTime
     */
    public function testToBigActivityName(): void
    {
        $input = [
            "19.04.2025" => [
                "Sport and Wellness" => "00:10:24",
                "Procrastination" => "23:49:36",
            ]
        ];

        $output = <<<EOL
+---------------+----------+----------+----------+----------+----------+----------+----------+
|               |__.__.____|__.__.____|__.__.____|__.__.____|__.__.____|19.04.2025|__.__.____|
+---------------+----------+----------+----------+----------+----------+----------+----------+
|Sport and We...| --:--:-- | --:--:-- | --:--:-- | --:--:-- | --:--:-- | 00:10:24 | --:--:-- |
+---------------+----------+----------+----------+----------+----------+----------+----------+
|Procrastination| --:--:-- | --:--:-- | --:--:-- | --:--:-- | --:--:-- | 23:49:36 | --:--:-- |
+---------------+----------+----------+----------+----------+----------+----------+----------+
EOL;
        $this->assertEquals($output, $this->presenter->getBaseTable($input));
    }
}